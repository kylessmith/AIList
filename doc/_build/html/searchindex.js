Search.setIndex({"docnames": ["README", "api/ailist.AIList", "api/ailist.AIList.add", "api/ailist.AIList.append", "api/ailist.AIList.bin_coverage", "api/ailist.AIList.bin_nhits", "api/ailist.AIList.close", "api/ailist.AIList.common", "api/ailist.AIList.construct", "api/ailist.AIList.copy", "api/ailist.AIList.coverage", "api/ailist.AIList.display", "api/ailist.AIList.downsample", "api/ailist.AIList.extract_ends", "api/ailist.AIList.extract_id", "api/ailist.AIList.extract_starts", "api/ailist.AIList.filter", "api/ailist.AIList.first", "api/ailist.AIList.freeze", "api/ailist.AIList.from_array", "api/ailist.AIList.idxC", "api/ailist.AIList.intersect", "api/ailist.AIList.intersect_from_ailist", "api/ailist.AIList.intersect_from_array", "api/ailist.AIList.intersect_ids", "api/ailist.AIList.interval_coverage", "api/ailist.AIList.is_closed", "api/ailist.AIList.is_constructed", "api/ailist.AIList.is_frozen", "api/ailist.AIList.iter_sorted", "api/ailist.AIList.last", "api/ailist.AIList.lenC", "api/ailist.AIList.length_dist", "api/ailist.AIList.merge", "api/ailist.AIList.nc", "api/ailist.AIList.nhits", "api/ailist.AIList.nhits_from_array", "api/ailist.AIList.range", "api/ailist.AIList.size", "api/ailist.AIList.subtract", "api/ailist.AIList.unfreeze", "api/ailist.AIList.wps", "api/ailist.Interval", "api/ailist.Interval.end", "api/ailist.Interval.start", "api/ailist.IntervalArray", "api/ailist.IntervalArray.add", "api/ailist.IntervalArray.append", "api/ailist.IntervalArray.bin_nhits", "api/ailist.IntervalArray.close", "api/ailist.IntervalArray.construct", "api/ailist.IntervalArray.copy", "api/ailist.IntervalArray.coverage", "api/ailist.IntervalArray.create_bin", "api/ailist.IntervalArray.downsample", "api/ailist.IntervalArray.ends", "api/ailist.IntervalArray.filter", "api/ailist.IntervalArray.filter_exact_match", "api/ailist.IntervalArray.freeze", "api/ailist.IntervalArray.has_exact_match", "api/ailist.IntervalArray.has_hit", "api/ailist.IntervalArray.index_with_aiarray", "api/ailist.IntervalArray.intersect", "api/ailist.IntervalArray.intersect_from_IntervalArray", "api/ailist.IntervalArray.is_closed", "api/ailist.IntervalArray.is_constructed", "api/ailist.IntervalArray.is_frozen", "api/ailist.IntervalArray.iter_intersect", "api/ailist.IntervalArray.iter_sorted", "api/ailist.IntervalArray.length_dist", "api/ailist.IntervalArray.merge", "api/ailist.IntervalArray.nhits", "api/ailist.IntervalArray.nhits_from_IntervalArray", "api/ailist.IntervalArray.range", "api/ailist.IntervalArray.simulate", "api/ailist.IntervalArray.size", "api/ailist.IntervalArray.sort", "api/ailist.IntervalArray.sorted_index", "api/ailist.IntervalArray.starts", "api/ailist.IntervalArray.unfreeze", "api/ailist.IntervalArray.validate_construction", "api/ailist.IntervalArray.wps", "api/ailist.LabeledInterval", "api/ailist.LabeledInterval.end", "api/ailist.LabeledInterval.id_value", "api/ailist.LabeledInterval.label", "api/ailist.LabeledInterval.start", "api/ailist.LabeledInterval.to_array", "api/ailist.LabeledIntervalArray", "api/ailist.LabeledIntervalArray.add", "api/ailist.LabeledIntervalArray.append", "api/ailist.LabeledIntervalArray.bin_nhits", "api/ailist.LabeledIntervalArray.close", "api/ailist.LabeledIntervalArray.common", "api/ailist.LabeledIntervalArray.construct", "api/ailist.LabeledIntervalArray.copy", "api/ailist.LabeledIntervalArray.coverage", "api/ailist.LabeledIntervalArray.create_bin", "api/ailist.LabeledIntervalArray.downsample", "api/ailist.LabeledIntervalArray.ends", "api/ailist.LabeledIntervalArray.filter", "api/ailist.LabeledIntervalArray.filter_exact_match", "api/ailist.LabeledIntervalArray.freeze", "api/ailist.LabeledIntervalArray.get", "api/ailist.LabeledIntervalArray.get_ail", "api/ailist.LabeledIntervalArray.get_locs", "api/ailist.LabeledIntervalArray.has_exact_match", "api/ailist.LabeledIntervalArray.has_hit", "api/ailist.LabeledIntervalArray.index_with_aiarray", "api/ailist.LabeledIntervalArray.intersect", "api/ailist.LabeledIntervalArray.intersect_from_LabeledIntervalArray", "api/ailist.LabeledIntervalArray.is_closed", "api/ailist.LabeledIntervalArray.is_constructed", "api/ailist.LabeledIntervalArray.is_exact_match", "api/ailist.LabeledIntervalArray.is_frozen", "api/ailist.LabeledIntervalArray.iter_intersect", "api/ailist.LabeledIntervalArray.iter_sorted", "api/ailist.LabeledIntervalArray.label_counts", "api/ailist.LabeledIntervalArray.label_ranges", "api/ailist.LabeledIntervalArray.labels", "api/ailist.LabeledIntervalArray.length_dist", "api/ailist.LabeledIntervalArray.merge", "api/ailist.LabeledIntervalArray.midpoint_coverage", "api/ailist.LabeledIntervalArray.nhits", "api/ailist.LabeledIntervalArray.nhits_from_LabeledIntervalArray", "api/ailist.LabeledIntervalArray.percent_coverage", "api/ailist.LabeledIntervalArray.set_ail", "api/ailist.LabeledIntervalArray.simulate", "api/ailist.LabeledIntervalArray.size", "api/ailist.LabeledIntervalArray.sort", "api/ailist.LabeledIntervalArray.sorted_index", "api/ailist.LabeledIntervalArray.starts", "api/ailist.LabeledIntervalArray.subtract", "api/ailist.LabeledIntervalArray.unfreeze", "api/ailist.LabeledIntervalArray.union", "api/ailist.LabeledIntervalArray.unique_labels", "api/ailist.LabeledIntervalArray.validate_construction", "api/ailist.LabeledIntervalArray.where_interval", "api/ailist.LabeledIntervalArray.which_exact_match", "api/ailist.LabeledIntervalArray.wps", "api/index", "benchmarking", "index", "installation", "release-notes", "tutorial"], "filenames": ["README.rst", "api/ailist.AIList.rst", "api/ailist.AIList.add.rst", "api/ailist.AIList.append.rst", "api/ailist.AIList.bin_coverage.rst", "api/ailist.AIList.bin_nhits.rst", "api/ailist.AIList.close.rst", "api/ailist.AIList.common.rst", "api/ailist.AIList.construct.rst", "api/ailist.AIList.copy.rst", "api/ailist.AIList.coverage.rst", "api/ailist.AIList.display.rst", "api/ailist.AIList.downsample.rst", "api/ailist.AIList.extract_ends.rst", "api/ailist.AIList.extract_id.rst", "api/ailist.AIList.extract_starts.rst", "api/ailist.AIList.filter.rst", "api/ailist.AIList.first.rst", "api/ailist.AIList.freeze.rst", "api/ailist.AIList.from_array.rst", "api/ailist.AIList.idxC.rst", "api/ailist.AIList.intersect.rst", "api/ailist.AIList.intersect_from_ailist.rst", "api/ailist.AIList.intersect_from_array.rst", "api/ailist.AIList.intersect_ids.rst", "api/ailist.AIList.interval_coverage.rst", "api/ailist.AIList.is_closed.rst", "api/ailist.AIList.is_constructed.rst", "api/ailist.AIList.is_frozen.rst", "api/ailist.AIList.iter_sorted.rst", "api/ailist.AIList.last.rst", "api/ailist.AIList.lenC.rst", "api/ailist.AIList.length_dist.rst", "api/ailist.AIList.merge.rst", "api/ailist.AIList.nc.rst", "api/ailist.AIList.nhits.rst", "api/ailist.AIList.nhits_from_array.rst", "api/ailist.AIList.range.rst", "api/ailist.AIList.size.rst", "api/ailist.AIList.subtract.rst", "api/ailist.AIList.unfreeze.rst", "api/ailist.AIList.wps.rst", "api/ailist.Interval.rst", "api/ailist.Interval.end.rst", "api/ailist.Interval.start.rst", "api/ailist.IntervalArray.rst", "api/ailist.IntervalArray.add.rst", "api/ailist.IntervalArray.append.rst", "api/ailist.IntervalArray.bin_nhits.rst", "api/ailist.IntervalArray.close.rst", "api/ailist.IntervalArray.construct.rst", "api/ailist.IntervalArray.copy.rst", "api/ailist.IntervalArray.coverage.rst", "api/ailist.IntervalArray.create_bin.rst", "api/ailist.IntervalArray.downsample.rst", "api/ailist.IntervalArray.ends.rst", "api/ailist.IntervalArray.filter.rst", "api/ailist.IntervalArray.filter_exact_match.rst", "api/ailist.IntervalArray.freeze.rst", "api/ailist.IntervalArray.has_exact_match.rst", "api/ailist.IntervalArray.has_hit.rst", "api/ailist.IntervalArray.index_with_aiarray.rst", "api/ailist.IntervalArray.intersect.rst", "api/ailist.IntervalArray.intersect_from_IntervalArray.rst", "api/ailist.IntervalArray.is_closed.rst", "api/ailist.IntervalArray.is_constructed.rst", "api/ailist.IntervalArray.is_frozen.rst", "api/ailist.IntervalArray.iter_intersect.rst", "api/ailist.IntervalArray.iter_sorted.rst", "api/ailist.IntervalArray.length_dist.rst", "api/ailist.IntervalArray.merge.rst", "api/ailist.IntervalArray.nhits.rst", "api/ailist.IntervalArray.nhits_from_IntervalArray.rst", "api/ailist.IntervalArray.range.rst", "api/ailist.IntervalArray.simulate.rst", "api/ailist.IntervalArray.size.rst", "api/ailist.IntervalArray.sort.rst", "api/ailist.IntervalArray.sorted_index.rst", "api/ailist.IntervalArray.starts.rst", "api/ailist.IntervalArray.unfreeze.rst", "api/ailist.IntervalArray.validate_construction.rst", "api/ailist.IntervalArray.wps.rst", "api/ailist.LabeledInterval.rst", "api/ailist.LabeledInterval.end.rst", "api/ailist.LabeledInterval.id_value.rst", "api/ailist.LabeledInterval.label.rst", "api/ailist.LabeledInterval.start.rst", "api/ailist.LabeledInterval.to_array.rst", "api/ailist.LabeledIntervalArray.rst", "api/ailist.LabeledIntervalArray.add.rst", "api/ailist.LabeledIntervalArray.append.rst", "api/ailist.LabeledIntervalArray.bin_nhits.rst", "api/ailist.LabeledIntervalArray.close.rst", "api/ailist.LabeledIntervalArray.common.rst", "api/ailist.LabeledIntervalArray.construct.rst", "api/ailist.LabeledIntervalArray.copy.rst", "api/ailist.LabeledIntervalArray.coverage.rst", "api/ailist.LabeledIntervalArray.create_bin.rst", "api/ailist.LabeledIntervalArray.downsample.rst", "api/ailist.LabeledIntervalArray.ends.rst", "api/ailist.LabeledIntervalArray.filter.rst", "api/ailist.LabeledIntervalArray.filter_exact_match.rst", "api/ailist.LabeledIntervalArray.freeze.rst", "api/ailist.LabeledIntervalArray.get.rst", "api/ailist.LabeledIntervalArray.get_ail.rst", "api/ailist.LabeledIntervalArray.get_locs.rst", "api/ailist.LabeledIntervalArray.has_exact_match.rst", "api/ailist.LabeledIntervalArray.has_hit.rst", "api/ailist.LabeledIntervalArray.index_with_aiarray.rst", "api/ailist.LabeledIntervalArray.intersect.rst", "api/ailist.LabeledIntervalArray.intersect_from_LabeledIntervalArray.rst", "api/ailist.LabeledIntervalArray.is_closed.rst", "api/ailist.LabeledIntervalArray.is_constructed.rst", "api/ailist.LabeledIntervalArray.is_exact_match.rst", "api/ailist.LabeledIntervalArray.is_frozen.rst", "api/ailist.LabeledIntervalArray.iter_intersect.rst", "api/ailist.LabeledIntervalArray.iter_sorted.rst", "api/ailist.LabeledIntervalArray.label_counts.rst", "api/ailist.LabeledIntervalArray.label_ranges.rst", "api/ailist.LabeledIntervalArray.labels.rst", "api/ailist.LabeledIntervalArray.length_dist.rst", "api/ailist.LabeledIntervalArray.merge.rst", "api/ailist.LabeledIntervalArray.midpoint_coverage.rst", "api/ailist.LabeledIntervalArray.nhits.rst", "api/ailist.LabeledIntervalArray.nhits_from_LabeledIntervalArray.rst", "api/ailist.LabeledIntervalArray.percent_coverage.rst", "api/ailist.LabeledIntervalArray.set_ail.rst", "api/ailist.LabeledIntervalArray.simulate.rst", "api/ailist.LabeledIntervalArray.size.rst", "api/ailist.LabeledIntervalArray.sort.rst", "api/ailist.LabeledIntervalArray.sorted_index.rst", "api/ailist.LabeledIntervalArray.starts.rst", "api/ailist.LabeledIntervalArray.subtract.rst", "api/ailist.LabeledIntervalArray.unfreeze.rst", "api/ailist.LabeledIntervalArray.union.rst", "api/ailist.LabeledIntervalArray.unique_labels.rst", "api/ailist.LabeledIntervalArray.validate_construction.rst", "api/ailist.LabeledIntervalArray.where_interval.rst", "api/ailist.LabeledIntervalArray.which_exact_match.rst", "api/ailist.LabeledIntervalArray.wps.rst", "api/index.rst", "benchmarking.rst", "index.rst", "installation.rst", "release-notes.rst", "tutorial.rst"], "titles": ["ailist \u2013 Augmented Interval List implemented in Cython/C", "ailist.AIList", "ailist.AIList.add", "ailist.AIList.append", "ailist.AIList.bin_coverage", "ailist.AIList.bin_nhits", "ailist.AIList.close", "ailist.AIList.common", "ailist.AIList.construct", "ailist.AIList.copy", "ailist.AIList.coverage", "ailist.AIList.display", "ailist.AIList.downsample", "ailist.AIList.extract_ends", "ailist.AIList.extract_id", "ailist.AIList.extract_starts", "ailist.AIList.filter", "ailist.AIList.first", "ailist.AIList.freeze", "ailist.AIList.from_array", "ailist.AIList.idxC", "ailist.AIList.intersect", "ailist.AIList.intersect_from_ailist", "ailist.AIList.intersect_from_array", "ailist.AIList.intersect_ids", "ailist.AIList.interval_coverage", "ailist.AIList.is_closed", "ailist.AIList.is_constructed", "ailist.AIList.is_frozen", "ailist.AIList.iter_sorted", "ailist.AIList.last", "ailist.AIList.lenC", "ailist.AIList.length_dist", "ailist.AIList.merge", "ailist.AIList.nc", "ailist.AIList.nhits", "ailist.AIList.nhits_from_array", "ailist.AIList.range", "ailist.AIList.size", "ailist.AIList.subtract", "ailist.AIList.unfreeze", "ailist.AIList.wps", "ailist.Interval", "ailist.Interval.end", "ailist.Interval.start", "ailist.IntervalArray", "ailist.IntervalArray.add", "ailist.IntervalArray.append", "ailist.IntervalArray.bin_nhits", "ailist.IntervalArray.close", "ailist.IntervalArray.construct", "ailist.IntervalArray.copy", "ailist.IntervalArray.coverage", "ailist.IntervalArray.create_bin", "ailist.IntervalArray.downsample", "ailist.IntervalArray.ends", "ailist.IntervalArray.filter", "ailist.IntervalArray.filter_exact_match", "ailist.IntervalArray.freeze", "ailist.IntervalArray.has_exact_match", "ailist.IntervalArray.has_hit", "ailist.IntervalArray.index_with_aiarray", "ailist.IntervalArray.intersect", "ailist.IntervalArray.intersect_from_IntervalArray", "ailist.IntervalArray.is_closed", "ailist.IntervalArray.is_constructed", "ailist.IntervalArray.is_frozen", "ailist.IntervalArray.iter_intersect", "ailist.IntervalArray.iter_sorted", "ailist.IntervalArray.length_dist", "ailist.IntervalArray.merge", "ailist.IntervalArray.nhits", "ailist.IntervalArray.nhits_from_IntervalArray", "ailist.IntervalArray.range", "ailist.IntervalArray.simulate", "ailist.IntervalArray.size", "ailist.IntervalArray.sort", "ailist.IntervalArray.sorted_index", "ailist.IntervalArray.starts", "ailist.IntervalArray.unfreeze", "ailist.IntervalArray.validate_construction", "ailist.IntervalArray.wps", "ailist.LabeledInterval", "ailist.LabeledInterval.end", "ailist.LabeledInterval.id_value", "ailist.LabeledInterval.label", "ailist.LabeledInterval.start", "ailist.LabeledInterval.to_array", "ailist.LabeledIntervalArray", "ailist.LabeledIntervalArray.add", "ailist.LabeledIntervalArray.append", "ailist.LabeledIntervalArray.bin_nhits", "ailist.LabeledIntervalArray.close", "ailist.LabeledIntervalArray.common", "ailist.LabeledIntervalArray.construct", "ailist.LabeledIntervalArray.copy", "ailist.LabeledIntervalArray.coverage", "ailist.LabeledIntervalArray.create_bin", "ailist.LabeledIntervalArray.downsample", "ailist.LabeledIntervalArray.ends", "ailist.LabeledIntervalArray.filter", "ailist.LabeledIntervalArray.filter_exact_match", "ailist.LabeledIntervalArray.freeze", "ailist.LabeledIntervalArray.get", "ailist.LabeledIntervalArray.get_ail", "ailist.LabeledIntervalArray.get_locs", "ailist.LabeledIntervalArray.has_exact_match", "ailist.LabeledIntervalArray.has_hit", "ailist.LabeledIntervalArray.index_with_aiarray", "ailist.LabeledIntervalArray.intersect", "ailist.LabeledIntervalArray.intersect_from_LabeledIntervalArray", "ailist.LabeledIntervalArray.is_closed", "ailist.LabeledIntervalArray.is_constructed", "ailist.LabeledIntervalArray.is_exact_match", "ailist.LabeledIntervalArray.is_frozen", "ailist.LabeledIntervalArray.iter_intersect", "ailist.LabeledIntervalArray.iter_sorted", "ailist.LabeledIntervalArray.label_counts", "ailist.LabeledIntervalArray.label_ranges", "ailist.LabeledIntervalArray.labels", "ailist.LabeledIntervalArray.length_dist", "ailist.LabeledIntervalArray.merge", "ailist.LabeledIntervalArray.midpoint_coverage", "ailist.LabeledIntervalArray.nhits", "ailist.LabeledIntervalArray.nhits_from_LabeledIntervalArray", "ailist.LabeledIntervalArray.percent_coverage", "ailist.LabeledIntervalArray.set_ail", "ailist.LabeledIntervalArray.simulate", "ailist.LabeledIntervalArray.size", "ailist.LabeledIntervalArray.sort", "ailist.LabeledIntervalArray.sorted_index", "ailist.LabeledIntervalArray.starts", "ailist.LabeledIntervalArray.subtract", "ailist.LabeledIntervalArray.unfreeze", "ailist.LabeledIntervalArray.union", "ailist.LabeledIntervalArray.unique_labels", "ailist.LabeledIntervalArray.validate_construction", "ailist.LabeledIntervalArray.where_interval", "ailist.LabeledIntervalArray.which_exact_match", "ailist.LabeledIntervalArray.wps", "The ailist API reference", "Benchmarking", "ailist\u2019s documentation", "Installation", "Release Notes", "Tutorial"], "terms": {"The": [0, 93, 95, 125, 132, 134, 142], "python": [0, 142, 143], "base": [0, 142], "effici": [0, 142], "deal": [0, 142], "mani": [0, 142], "test": [0, 141, 142], "numpi": [0, 13, 14, 15, 19, 23, 24, 32, 36, 47, 52, 60, 69, 71, 90, 96, 103, 107, 113, 120, 122, 123, 137, 138, 141, 142, 143], "random": [0, 141, 142], "integ": [0, 142], "see": [0, 142], "librari": [0, 142], "function": [0, 142], "time": [0, 141, 142], "\u00b5": [0, 141, 142], "ncl": [0, 141, 142], "singl": [0, 142], "overlap": [0, 2, 5, 8, 10, 19, 21, 22, 23, 24, 25, 35, 36, 46, 47, 48, 50, 60, 62, 63, 68, 71, 72, 89, 90, 91, 94, 103, 107, 109, 110, 116, 123, 124, 141, 142], "1170": [0, 142], "quicksect": [0, 141, 142], "1050": [0, 142], "panda": [0, 4, 5, 10, 25, 41, 48, 72, 81, 91, 124, 139, 141, 142], "241": [0, 141, 142], "102": [0, 141, 142], "As": [0, 142], "conduct": [0, 142], "onli": [0, 142], "have": [0, 142, 143], "bulk": [0, 142], "queri": [0, 21, 22, 23, 24, 62, 63, 72, 109, 110, 124, 142], "": [0, 141], "max": [0, 141, 142], "memori": [0, 6, 49, 64, 92, 141, 142, 144], "gb": [0, 142], "151": [0, 142], "50": [0, 93, 113, 134, 137, 138, 141, 142], "17": [0, 141, 142], "9": [0, 18, 40, 58, 79, 102, 133, 141, 142], "i": [0, 18, 40, 58, 62, 64, 65, 66, 68, 79, 95, 102, 109, 112, 116, 125, 132, 133, 134, 136, 141, 142], "much": [0, 142], "faster": [0, 142], "more": [0, 142], "ailist": [141, 143, 144, 145], "version": 141, "0": [2, 8, 18, 19, 21, 22, 23, 24, 33, 40, 47, 63, 70, 90, 93, 95, 103, 110, 113, 121, 125, 132, 134, 137, 138, 141], "1": [2, 8, 16, 18, 19, 21, 22, 23, 24, 36, 40, 46, 47, 50, 56, 58, 60, 62, 63, 68, 79, 89, 90, 94, 100, 102, 103, 107, 109, 110, 116, 133, 141, 145], "7": 141, "from": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 94, 102, 103, 107, 109, 110, 113, 116, 133, 137, 138, 141, 143, 145], "import": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 94, 102, 103, 107, 109, 110, 113, 116, 133, 137, 138, 141, 145], "53": 141, "18": 141, "4": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 94, 102, 103, 107, 109, 110, 116, 133, 141, 145], "np": [19, 22, 23, 47, 60, 62, 63, 90, 107, 109, 110, 141], "3": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 94, 102, 103, 107, 109, 110, 116, 133, 141, 143, 145], "pd": 141, "2": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 94, 102, 103, 107, 109, 110, 116, 133, 141, 145], "set": 141, "seed": 141, "100": [19, 47, 90, 141], "first": [37, 141], "valu": [4, 5, 10, 13, 14, 15, 41, 48, 52, 55, 72, 78, 81, 91, 96, 99, 119, 122, 124, 131, 139, 141], "starts1": 141, "randint": 141, "100000": [4, 5, 48, 53, 91, 97, 141], "ends1": 141, "10000": 141, "ids1": 141, "arang": [19, 47, 90, 141], "len": [19, 47, 90, 141], "values1": 141, "ones": 141, "second": 141, "starts2": 141, "ends2": 141, "ids2": 141, "values2": 141, "from_arrai": [2, 46, 47, 89, 90, 103, 141], "cpu": 141, "user": 141, "12": [19, 47, 90, 141], "m": 141, "sy": 141, "55": 141, "total": 141, "67": 141, "wall": 141, "6": [2, 8, 18, 21, 22, 23, 24, 40, 46, 50, 58, 60, 62, 63, 68, 79, 89, 94, 102, 103, 107, 109, 110, 116, 133, 141, 143, 145], "construct": [2, 18, 19, 20, 21, 22, 23, 24, 31, 34, 40, 46, 47, 58, 60, 62, 63, 65, 79, 89, 90, 102, 103, 107, 109, 110, 112, 133, 136, 141], "11": [19, 47, 90, 141], "35": 141, "13": [19, 47, 90, 141], "ai_r": 141, "intersect_from_arrai": [21, 22, 24, 60, 62, 63, 107, 109, 110, 141, 142, 144], "5": [141, 143], "96": [19, 47, 90, 141], "result": 141, "usag": 141, "5gb": 141, "9gb": 141, "timeit": 141, "intersect": [2, 8, 18, 19, 22, 23, 24, 25, 36, 40, 46, 47, 50, 58, 60, 63, 68, 71, 79, 89, 90, 94, 102, 103, 107, 110, 116, 123, 133, 141, 142, 144, 145], "05": 141, "per": [25, 36, 71, 117, 123, 141], "loop": 141, "mean": 141, "std": 141, "dev": 141, "run": [21, 22, 23, 24, 60, 62, 107, 109, 141, 143], "each": [25, 41, 52, 73, 81, 96, 118, 122, 139, 141], "n": 141, "36": 141, "65": 141, "38": 141, "n_re": 141, "all_overlaps_both": 141, "1min": 141, "2min": 141, "31": 141, "30gb": 141, "50gb": 141, "list": [1, 45, 88, 141], "find_overlap": 141, "22": 141, "1000": 141, "intervalindex": 141, "p": 141, "from_tupl": 141, "zip": 141, "873": 141, "10": [18, 19, 21, 24, 40, 47, 58, 62, 79, 90, 93, 95, 102, 109, 113, 125, 132, 133, 134, 137, 138, 141], "883": 141, "884": 141, "interv": [1, 2, 3, 4, 5, 7, 8, 10, 11, 12, 16, 17, 18, 19, 21, 22, 23, 24, 25, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 45, 46, 47, 48, 50, 52, 54, 56, 57, 58, 59, 60, 62, 63, 68, 69, 70, 71, 72, 75, 79, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 98, 100, 101, 102, 103, 106, 107, 109, 110, 113, 116, 117, 120, 121, 122, 123, 124, 128, 133, 137, 138, 139, 141, 144], "b": [93, 95, 103, 109, 110, 113, 125, 132, 134, 137, 138, 141, 145], "intervaltre": 141, "rang": [2, 8, 10, 16, 18, 19, 21, 22, 23, 24, 40, 41, 46, 47, 50, 52, 56, 60, 62, 63, 68, 81, 89, 90, 94, 96, 100, 102, 103, 107, 109, 110, 116, 118, 122, 133, 139, 141], "add": [8, 18, 19, 21, 22, 23, 24, 40, 47, 50, 58, 60, 62, 63, 68, 79, 90, 94, 102, 103, 107, 109, 110, 113, 116, 133, 137, 138, 141, 145], "search": [141, 142], "79": 141, "8": 141, "provid": 142, "scalabl": 142, "wai": [29, 68, 116, 142], "store": [1, 42, 45, 82, 88, 142], "code": 142, "discuss": 142, "develop": 142, "github": 142, "method": [1, 42, 45, 82, 88, 142, 144], "addit": [142, 144], "index_by_ailist": [142, 144], "fix": [142, 144], "leak": [142, 144], "frozen": [18, 40, 58, 79, 102, 133, 142, 144], "statu": [142, 144], "abil": [142, 144], "make": [18, 40, 58, 79, 102, 133, 142, 144], "immut": [18, 40, 58, 66, 79, 102, 133, 142, 144], "freez": [40, 79, 133, 142, 144], "ad": [142, 144], "index": [4, 5, 10, 19, 20, 41, 48, 72, 81, 91, 103, 124, 139, 142, 144], "iter": [29, 68, 116, 142, 144], "downsampl": [142, 144], "bin_sum": [142, 144], "bin_mean": [142, 144], "overhaul": [142, 144], "creation": [142, 144], "api": 142, "refer": 142, "tutori": 142, "instal": 142, "modul": 142, "page": 142, "If": 143, "you": 143, "do": 143, "work": 143, "consid": 143, "miniconda": 143, "Then": 143, "conda": 143, "pull": 143, "us": [4, 5, 41, 48, 81, 91, 139, 143], "pip3": 143, "access": 143, "pip": 143, "prefer": 143, "exclus": 143, "document": 144, "labeledintervalarrai": 145, "ail": [2, 8, 18, 19, 21, 24, 40, 46, 47, 50, 58, 60, 62, 68, 79, 89, 90, 94, 102, 103, 107, 109, 113, 116, 126, 133, 137, 138, 145], "class": [1, 42, 45, 82, 88], "wrapper": [1, 42, 82, 88], "c": [1, 42, 82, 88, 93, 113, 125, 132, 134, 137, 138], "ailist_t": [1, 8], "attribut": [1, 42, 45, 82, 88], "self": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 35, 36, 39, 40, 41, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139], "int": [2, 4, 5, 8, 16, 21, 22, 23, 24, 25, 32, 33, 35, 36, 41, 43, 44, 46, 48, 50, 52, 56, 60, 62, 63, 69, 70, 71, 72, 81, 89, 91, 94, 96, 100, 107, 109, 110, 113, 120, 121, 122, 123, 124, 137, 138, 139], "start": [2, 15, 17, 19, 21, 23, 24, 25, 35, 36, 42, 46, 47, 60, 62, 71, 73, 82, 89, 90, 107, 109, 118, 123, 137], "end": [2, 13, 19, 21, 23, 24, 25, 30, 35, 36, 42, 46, 47, 60, 62, 71, 73, 82, 89, 90, 107, 109, 118, 123, 137], "id_valu": [2, 82], "none": [2, 4, 5, 8, 10, 13, 14, 15, 18, 19, 29, 32, 35, 36, 40, 41, 42, 46, 47, 48, 50, 52, 58, 68, 69, 71, 72, 79, 81, 82, 89, 90, 91, 94, 96, 102, 116, 120, 122, 123, 124, 133, 139], "an": [2, 29, 42, 46, 68, 82, 89, 116], "inplac": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 68, 79, 89, 90, 94, 102, 107, 109, 116, 133], "paramet": [2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 35, 36, 39, 40, 41, 46, 47, 48, 50, 52, 54, 56, 58, 60, 62, 63, 68, 69, 70, 71, 72, 79, 81, 89, 90, 91, 93, 94, 96, 98, 100, 102, 103, 107, 109, 110, 113, 116, 120, 121, 122, 123, 124, 125, 132, 133, 134, 137, 138, 139], "posit": [2, 4, 5, 10, 19, 21, 23, 24, 25, 35, 36, 41, 46, 48, 52, 60, 62, 71, 72, 81, 89, 91, 96, 107, 109, 122, 123, 124, 139], "doubl": [2, 4, 5, 10, 12, 41, 48, 54, 72, 81, 91, 98, 124, 139], "id": [2, 14, 19, 23, 24, 84], "default": [2, 4, 5, 35, 36, 41, 48, 52, 71, 72, 81, 91, 96, 122, 123, 124, 139], "return": [2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 18, 19, 21, 22, 23, 24, 25, 29, 32, 33, 35, 36, 39, 40, 41, 46, 47, 48, 50, 52, 54, 56, 58, 60, 62, 63, 68, 69, 70, 71, 72, 79, 81, 89, 90, 91, 93, 94, 95, 96, 98, 100, 102, 103, 107, 109, 110, 113, 116, 120, 121, 122, 123, 124, 125, 132, 133, 134, 136, 137, 138, 139], "arrai": [2, 19, 22, 23, 24, 46, 47, 60, 63, 89, 90, 103, 107, 110, 135], "requir": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 79, 89, 90, 94, 102, 103, 107, 109, 110, 133], "call": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 79, 89, 90, 94, 102, 103, 107, 109, 110, 133], "find": [2, 4, 5, 7, 8, 10, 19, 21, 22, 23, 24, 25, 35, 36, 46, 47, 48, 50, 60, 62, 63, 68, 71, 72, 89, 90, 91, 93, 94, 103, 107, 109, 110, 116, 123, 124, 125, 132, 134], "given": [2, 8, 19, 21, 22, 23, 24, 25, 36, 46, 47, 50, 60, 62, 63, 68, 71, 89, 90, 94, 103, 107, 109, 110, 116, 123], "exampl": [2, 8, 18, 19, 21, 22, 23, 24, 40, 46, 47, 50, 58, 60, 62, 63, 68, 79, 89, 90, 93, 94, 95, 102, 103, 107, 109, 110, 113, 116, 125, 132, 133, 134, 137, 138], "query_ail": [3, 7, 39], "union": 3, "within": [3, 4, 7, 33, 39, 70, 121], "two": [3, 93, 125, 132, 134], "union_list": 3, "bin_siz": [4, 5, 48, 53, 91, 97], "min_length": [4, 5, 8, 16, 35, 36, 41, 48, 50, 52, 56, 71, 72, 81, 91, 94, 96, 100, 122, 123, 124, 139], "max_length": [4, 5, 16, 35, 36, 41, 48, 52, 56, 71, 72, 81, 91, 96, 100, 122, 123, 124, 139], "sum": 4, "coverag": [4, 5, 25, 48, 72, 91, 122, 124, 125], "bin": [4, 5, 35, 48, 72, 91, 124], "size": [4, 5, 48, 91], "minimum": [4, 5, 8, 16, 35, 36, 41, 48, 50, 52, 56, 71, 72, 81, 91, 94, 96, 100, 122, 123, 124, 139], "length": [4, 5, 8, 16, 31, 32, 35, 36, 41, 48, 50, 52, 56, 69, 71, 72, 81, 91, 94, 96, 100, 120, 122, 123, 124, 139], "includ": [4, 5, 35, 36, 41, 48, 52, 71, 72, 81, 91, 96, 122, 123, 124, 139], "maximum": [4, 5, 16, 35, 36, 41, 48, 52, 56, 71, 72, 81, 91, 96, 100, 122, 123, 124, 139], "seri": [4, 5, 10, 25, 41, 48, 72, 81, 91, 124, 139], "number": [5, 10, 25, 34, 35, 36, 38, 48, 71, 72, 75, 91, 117, 123, 124, 128], "object": [6, 49, 64, 66, 92, 113, 137, 138], "clear": [6, 49, 92], "anoth": [7, 39], "common_list": 7, "20": [8, 50, 93, 94, 95, 113, 125, 132, 134, 137, 138], "warn": [8, 21, 22, 23, 24, 60, 62, 107, 109], "thi": [8, 21, 22, 23, 24, 60, 62, 107, 109], "re": [8, 21, 22, 23, 24, 60, 62, 107, 109], "sort": [8, 18, 21, 22, 23, 24, 29, 40, 50, 58, 60, 62, 68, 79, 93, 94, 95, 102, 107, 109, 116, 125, 132, 133, 134], "everi": 10, "alist": 10, "print": [11, 68, 116], "all": 11, "proport": [12, 54, 98], "randomli": [12, 54, 98], "keep": [12, 16, 54, 56, 98, 100], "filtered_ail": [12, 16, 54, 56, 98, 100], "ndarrai": [13, 14, 15, 19, 22, 23, 24, 32, 36, 52, 60, 62, 63, 69, 71, 96, 103, 107, 109, 110, 113, 120, 122, 123, 137, 138], "400": [16, 56, 100], "out": [16, 56, 100], "outsid": [16, 56, 100], "langth": [16, 56, 100], "unfreez": [18, 58, 102], "mutabl": [18, 40, 58, 79, 102, 133], "typeerror": [18, 40, 58, 79, 102, 133], "current": [18, 40, 47, 58, 79, 90, 102, 133], "immutat": [18, 40, 58, 79, 102, 133], "try": [18, 40, 58, 79, 102, 133], "revers": [18, 40, 58, 79, 102, 133], "const": [19, 23, 36], "long": [19, 23, 36, 60, 71, 107, 123], "109": [19, 47, 90], "14": [19, 47, 90], "95": [19, 47, 90], "105": [19, 47, 90], "106": [19, 47, 90], "97": [19, 47, 90], "107": [19, 47, 90], "98": [19, 47, 90], "108": [19, 47, 90], "compon": [20, 31, 34], "alreadi": [21, 22, 23, 24, 60, 62, 107, 109], "intersect_index": [21, 22, 23, 24, 60, 62, 107, 109], "indic": [21, 22, 23, 24, 60, 62, 63, 103, 107, 109, 110, 113, 137, 138], "q": [21, 22, 23, 24, 60, 62, 63, 107, 109, 110], "ail_queri": [22, 63, 110], "ref_index": [22, 23, 63, 110, 113, 137, 138], "query_index": [22, 23, 63, 110, 113, 137, 138], "ail1": [22, 23, 60, 63, 107, 110], "ail2": [22, 23, 47, 60, 63, 90, 107, 110, 113, 137, 138], "hit": [25, 36, 71, 123], "bool": [26, 27, 28, 60, 103, 107, 111, 114, 136], "type": [26, 27, 28, 43, 44, 111, 114], "over": [29, 68, 116], "sorted_it": [29, 68, 116], "gener": [29, 68, 116], "calcul": [32, 41, 52, 69, 81, 96, 120, 122, 139], "distribut": [32, 69, 120], "gap": [33, 70, 121], "between": [33, 70, 93, 121], "merged_list": [33, 70, 121], "nhit": 36, "last": 37, "subtracted_list": 39, "protect": [41, 81, 139], "60": [41, 81, 113, 137, 138, 139], "window": [41, 81, 139], "score": [41, 81, 139], "interval_t": [42, 82], "sourc": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 81], "other_ail": [47, 90], "label": [47, 73, 82, 89, 90, 96, 103, 104, 105, 107, 109, 117, 118, 122, 123, 126, 135, 137, 139], "repeat": [47, 90], "99": [47, 90], "200": [47, 90], "labeled_aiarray_t": [50, 88, 94], "cov_result": [52, 96, 122], "dict": [52, 96, 122], "str": [52, 89, 96, 103, 107, 109, 122], "static": [53, 97], "bin_rang": 53, "return_interv": [54, 62, 63, 67, 98, 103, 109, 110, 115], "true": [54, 62, 63, 67, 98, 103, 109, 110, 115, 136], "return_index": [54, 62, 63, 67, 98, 103, 109, 110, 115], "properti": [55, 64, 65, 66, 73, 75, 78], "other_aiarrai": [57, 59, 61, 101, 106, 108, 113, 137, 138], "determin": [57, 59, 101, 106, 113, 137, 138], "which": [57, 59, 101, 106, 113, 137, 138], "ar": [57, 59, 93, 101, 106, 113, 137, 138], "present": [57, 59, 101, 106, 113, 137, 138], "detect": [60, 107], "track_index": [60, 62, 107, 109], "fals": [60, 62, 63, 67, 103, 107, 109, 110, 115, 136], "aiarrai": [60, 79, 94, 102, 107, 133], "whether": [64, 65, 66, 112], "still": 64, "query_laia": [67, 72, 115, 124], "labeledinterv": [68, 116], "labledintervalarrai": [68, 116], "s_iter": [68, 116], "other_laia": [93, 125, 132, 134], "common_laia": 93, "note": [93, 95, 125, 132, 134], "new": [93, 132, 134], "laia1": [93, 95, 125, 132, 134], "add_interv": [93, 95, 125, 132, 134], "A": [93, 95, 125, 132, 134], "30": [93, 113, 125, 132, 134, 137, 138], "40": [93, 113, 134, 137, 138], "d": [93, 134], "e": [93, 134], "laia2": [93, 95, 125, 132, 134], "labledaiarrai": 94, "laia_copi": 95, "dict_rang": 97, "flag": 103, "quert": 109, "intervalarrai": 110, "other": [113, 137, 138], "compar": [113, 137, 138], "70": [113, 137, 138], "count": 117, "percent": 125, "float": 125, "6666666666666666": 125, "3333333333333333": 125, "unicod": 126, "subtract_laia": 132, "union_laia": 134, "uniqu": 135, "valid": 136, "is_valid": 136, "otherwis": 136, "is_exact_match": [137, 138]}, "objects": {"": [[140, 0, 0, "-", "ailist"]], "ailist": [[1, 1, 1, "", "AIList"], [42, 1, 1, "", "Interval"], [45, 1, 1, "", "IntervalArray"], [82, 1, 1, "", "LabeledInterval"], [88, 1, 1, "", "LabeledIntervalArray"]], "ailist.AIList": [[2, 2, 1, "", "add"], [3, 2, 1, "", "append"], [4, 2, 1, "", "bin_coverage"], [5, 2, 1, "", "bin_nhits"], [6, 2, 1, "", "close"], [7, 2, 1, "", "common"], [8, 2, 1, "", "construct"], [9, 2, 1, "", "copy"], [10, 2, 1, "", "coverage"], [11, 2, 1, "", "display"], [12, 2, 1, "", "downsample"], [13, 2, 1, "", "extract_ends"], [14, 2, 1, "", "extract_id"], [15, 2, 1, "", "extract_starts"], [16, 2, 1, "", "filter"], [17, 3, 1, "", "first"], [18, 2, 1, "", "freeze"], [19, 2, 1, "", "from_array"], [20, 3, 1, "", "idxC"], [21, 2, 1, "", "intersect"], [22, 2, 1, "", "intersect_from_ailist"], [23, 2, 1, "", "intersect_from_array"], [24, 2, 1, "", "intersect_ids"], [25, 2, 1, "", "interval_coverage"], [26, 3, 1, "", "is_closed"], [27, 3, 1, "", "is_constructed"], [28, 3, 1, "", "is_frozen"], [29, 2, 1, "", "iter_sorted"], [30, 3, 1, "", "last"], [31, 3, 1, "", "lenC"], [32, 2, 1, "", "length_dist"], [33, 2, 1, "", "merge"], [34, 3, 1, "", "nc"], [35, 2, 1, "", "nhits"], [36, 2, 1, "", "nhits_from_array"], [37, 3, 1, "", "range"], [38, 3, 1, "", "size"], [39, 2, 1, "", "subtract"], [40, 2, 1, "", "unfreeze"], [41, 2, 1, "", "wps"]], "ailist.Interval": [[43, 3, 1, "", "end"], [44, 3, 1, "", "start"]], "ailist.IntervalArray": [[46, 2, 1, "", "add"], [47, 2, 1, "", "append"], [48, 2, 1, "", "bin_nhits"], [49, 2, 1, "", "close"], [50, 2, 1, "", "construct"], [51, 2, 1, "", "copy"], [52, 2, 1, "", "coverage"], [53, 2, 1, "", "create_bin"], [54, 2, 1, "", "downsample"], [55, 4, 1, "", "ends"], [56, 2, 1, "", "filter"], [57, 2, 1, "", "filter_exact_match"], [58, 2, 1, "", "freeze"], [59, 2, 1, "", "has_exact_match"], [60, 2, 1, "", "has_hit"], [61, 2, 1, "", "index_with_aiarray"], [62, 2, 1, "", "intersect"], [63, 2, 1, "", "intersect_from_IntervalArray"], [64, 4, 1, "", "is_closed"], [65, 4, 1, "", "is_constructed"], [66, 4, 1, "", "is_frozen"], [67, 2, 1, "", "iter_intersect"], [68, 2, 1, "", "iter_sorted"], [69, 2, 1, "", "length_dist"], [70, 2, 1, "", "merge"], [71, 2, 1, "", "nhits"], [72, 2, 1, "", "nhits_from_IntervalArray"], [73, 4, 1, "", "range"], [74, 2, 1, "", "simulate"], [75, 4, 1, "", "size"], [76, 2, 1, "", "sort"], [77, 2, 1, "", "sorted_index"], [78, 4, 1, "", "starts"], [79, 2, 1, "", "unfreeze"], [80, 2, 1, "", "validate_construction"], [81, 2, 1, "", "wps"]], "ailist.LabeledInterval": [[83, 3, 1, "", "end"], [84, 3, 1, "", "id_value"], [85, 3, 1, "", "label"], [86, 3, 1, "", "start"], [87, 2, 1, "", "to_array"]], "ailist.LabeledIntervalArray": [[89, 2, 1, "", "add"], [90, 2, 1, "", "append"], [91, 2, 1, "", "bin_nhits"], [92, 2, 1, "", "close"], [93, 2, 1, "", "common"], [94, 2, 1, "", "construct"], [95, 2, 1, "", "copy"], [96, 2, 1, "", "coverage"], [97, 2, 1, "", "create_bin"], [98, 2, 1, "", "downsample"], [99, 3, 1, "", "ends"], [100, 2, 1, "", "filter"], [101, 2, 1, "", "filter_exact_match"], [102, 2, 1, "", "freeze"], [103, 2, 1, "", "get"], [104, 2, 1, "", "get_ail"], [105, 2, 1, "", "get_locs"], [106, 2, 1, "", "has_exact_match"], [107, 2, 1, "", "has_hit"], [108, 2, 1, "", "index_with_aiarray"], [109, 2, 1, "", "intersect"], [110, 2, 1, "", "intersect_from_LabeledIntervalArray"], [111, 3, 1, "", "is_closed"], [112, 3, 1, "", "is_constructed"], [113, 2, 1, "", "is_exact_match"], [114, 3, 1, "", "is_frozen"], [115, 2, 1, "", "iter_intersect"], [116, 2, 1, "", "iter_sorted"], [117, 3, 1, "", "label_counts"], [118, 3, 1, "", "label_ranges"], [119, 3, 1, "", "labels"], [120, 2, 1, "", "length_dist"], [121, 2, 1, "", "merge"], [122, 2, 1, "", "midpoint_coverage"], [123, 2, 1, "", "nhits"], [124, 2, 1, "", "nhits_from_LabeledIntervalArray"], [125, 2, 1, "", "percent_coverage"], [126, 2, 1, "", "set_ail"], [127, 2, 1, "", "simulate"], [128, 3, 1, "", "size"], [129, 2, 1, "", "sort"], [130, 2, 1, "", "sorted_index"], [131, 3, 1, "", "starts"], [132, 2, 1, "", "subtract"], [133, 2, 1, "", "unfreeze"], [134, 2, 1, "", "union"], [135, 3, 1, "", "unique_labels"], [136, 2, 1, "", "validate_construction"], [137, 2, 1, "", "where_interval"], [138, 2, 1, "", "which_exact_match"], [139, 2, 1, "", "wps"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"]}, "titleterms": {"ailist": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "augment": [0, 142], "interv": [0, 42, 43, 44, 142], "list": [0, 142], "implement": [0, 142], "cython": [0, 142], "c": [0, 142], "benchmark": [0, 141, 142], "The": 140, "api": 140, "refer": 140, "": 142, "document": 142, "releas": [142, 144], "note": [142, 144], "indic": 142, "tabl": 142, "instal": 143, "anaconda": 143, "pypi": 143, "onli": 143, "version": 144, "0": 144, "1": 144, "8": 144, "7": 144, "tutori": 145, "add": [2, 46, 89], "append": [3, 47, 90], "bin_coverag": 4, "bin_nhit": [5, 48, 91], "close": [6, 49, 92], "common": [7, 93], "construct": [8, 50, 94], "copi": [9, 51, 95], "coverag": [10, 52, 96], "displai": 11, "downsampl": [12, 54, 98], "extract_end": 13, "extract_id": 14, "extract_start": 15, "filter": [16, 56, 100], "first": 17, "freez": [18, 58, 102], "from_arrai": 19, "idxc": 20, "intersect": [21, 62, 109], "intersect_from_ailist": 22, "intersect_from_arrai": 23, "intersect_id": 24, "interval_coverag": 25, "is_clos": [26, 64, 111], "is_construct": [27, 65, 112], "is_frozen": [28, 66, 114], "iter_sort": [29, 68, 116], "last": 30, "lenc": 31, "length_dist": [32, 69, 120], "merg": [33, 70, 121], "nc": 34, "nhit": [35, 71, 123], "nhits_from_arrai": 36, "rang": [37, 73], "size": [38, 75, 128], "subtract": [39, 132], "unfreez": [40, 79, 133], "wp": [41, 81, 139], "end": [43, 55, 83, 99], "start": [44, 78, 86, 131], "intervalarrai": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "create_bin": [53, 97], "filter_exact_match": [57, 101], "has_exact_match": [59, 106], "has_hit": [60, 107], "index_with_aiarrai": [61, 108], "intersect_from_intervalarrai": 63, "iter_intersect": [67, 115], "nhits_from_intervalarrai": 72, "simul": [74, 127], "sort": [76, 129], "sorted_index": [77, 130], "validate_construct": [80, 136], "labeledinterv": [82, 83, 84, 85, 86, 87], "id_valu": 84, "label": [85, 119], "to_arrai": 87, "labeledintervalarrai": [88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "get": 103, "get_ail": 104, "get_loc": 105, "intersect_from_labeledintervalarrai": 110, "is_exact_match": 113, "label_count": 117, "label_rang": 118, "midpoint_coverag": 122, "nhits_from_labeledintervalarrai": 124, "percent_coverag": 125, "set_ail": 126, "union": 134, "unique_label": 135, "where_interv": 137, "which_exact_match": 138, "basic": 140, "class": 140}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "scanpydoc.autosummary_generate_imported": 1, "scanpydoc.definition_list_typed_field": 1, "scanpydoc.elegant_typehints": 1, "scanpydoc.rtd_github_links": 1, "scanpydoc": 1, "sphinx": 57}, "alltitles": {"ailist \u2013 Augmented Interval List implemented in Cython/C": [[0, "ailist-augmented-interval-list-implemented-in-cython-c"], [142, "ailist-augmented-interval-list-implemented-in-cython-c"]], "Benchmark": [[0, "benchmark"], [142, "benchmark"]], "ailist.AIList": [[1, "ailist-ailist"]], "ailist.AIList.add": [[2, "ailist-ailist-add"]], "ailist.AIList.append": [[3, "ailist-ailist-append"]], "ailist.AIList.bin_coverage": [[4, "ailist-ailist-bin-coverage"]], "ailist.AIList.bin_nhits": [[5, "ailist-ailist-bin-nhits"]], "ailist.AIList.close": [[6, "ailist-ailist-close"]], "ailist.AIList.common": [[7, "ailist-ailist-common"]], "ailist.AIList.construct": [[8, "ailist-ailist-construct"]], "ailist.AIList.copy": [[9, "ailist-ailist-copy"]], "ailist.AIList.coverage": [[10, "ailist-ailist-coverage"]], "ailist.AIList.display": [[11, "ailist-ailist-display"]], "ailist.AIList.downsample": [[12, "ailist-ailist-downsample"]], "ailist.AIList.extract_ends": [[13, "ailist-ailist-extract-ends"]], "ailist.AIList.extract_id": [[14, "ailist-ailist-extract-id"]], "ailist.AIList.extract_starts": [[15, "ailist-ailist-extract-starts"]], "ailist.AIList.filter": [[16, "ailist-ailist-filter"]], "ailist.AIList.first": [[17, "ailist-ailist-first"]], "ailist.AIList.freeze": [[18, "ailist-ailist-freeze"]], "ailist.AIList.from_array": [[19, "ailist-ailist-from-array"]], "ailist.AIList.idxC": [[20, "ailist-ailist-idxc"]], "ailist.AIList.intersect": [[21, "ailist-ailist-intersect"]], "ailist.AIList.intersect_from_ailist": [[22, "ailist-ailist-intersect-from-ailist"]], "ailist.AIList.intersect_from_array": [[23, "ailist-ailist-intersect-from-array"]], "ailist.AIList.intersect_ids": [[24, "ailist-ailist-intersect-ids"]], "ailist.AIList.interval_coverage": [[25, "ailist-ailist-interval-coverage"]], "ailist.AIList.is_closed": [[26, "ailist-ailist-is-closed"]], "ailist.AIList.is_constructed": [[27, "ailist-ailist-is-constructed"]], "ailist.AIList.is_frozen": [[28, "ailist-ailist-is-frozen"]], "ailist.AIList.iter_sorted": [[29, "ailist-ailist-iter-sorted"]], "ailist.AIList.last": [[30, "ailist-ailist-last"]], "ailist.AIList.lenC": [[31, "ailist-ailist-lenc"]], "ailist.AIList.length_dist": [[32, "ailist-ailist-length-dist"]], "ailist.AIList.merge": [[33, "ailist-ailist-merge"]], "ailist.AIList.nc": [[34, "ailist-ailist-nc"]], "ailist.AIList.nhits": [[35, "ailist-ailist-nhits"]], "ailist.AIList.nhits_from_array": [[36, "ailist-ailist-nhits-from-array"]], "ailist.AIList.range": [[37, "ailist-ailist-range"]], "ailist.AIList.size": [[38, "ailist-ailist-size"]], "ailist.AIList.subtract": [[39, "ailist-ailist-subtract"]], "ailist.AIList.unfreeze": [[40, "ailist-ailist-unfreeze"]], "ailist.AIList.wps": [[41, "ailist-ailist-wps"]], "ailist.Interval": [[42, "ailist-interval"]], "ailist.Interval.end": [[43, "ailist-interval-end"]], "ailist.Interval.start": [[44, "ailist-interval-start"]], "ailist.IntervalArray": [[45, "ailist-intervalarray"]], "ailist.IntervalArray.add": [[46, "ailist-intervalarray-add"]], "ailist.IntervalArray.append": [[47, "ailist-intervalarray-append"]], "ailist.IntervalArray.bin_nhits": [[48, "ailist-intervalarray-bin-nhits"]], "ailist.IntervalArray.close": [[49, "ailist-intervalarray-close"]], "ailist.IntervalArray.construct": [[50, "ailist-intervalarray-construct"]], "ailist.IntervalArray.copy": [[51, "ailist-intervalarray-copy"]], "ailist.IntervalArray.coverage": [[52, "ailist-intervalarray-coverage"]], "ailist.IntervalArray.create_bin": [[53, "ailist-intervalarray-create-bin"]], "ailist.IntervalArray.downsample": [[54, "ailist-intervalarray-downsample"]], "ailist.IntervalArray.ends": [[55, "ailist-intervalarray-ends"]], "ailist.IntervalArray.filter": [[56, "ailist-intervalarray-filter"]], "ailist.IntervalArray.filter_exact_match": [[57, "ailist-intervalarray-filter-exact-match"]], "ailist.IntervalArray.freeze": [[58, "ailist-intervalarray-freeze"]], "ailist.IntervalArray.has_exact_match": [[59, "ailist-intervalarray-has-exact-match"]], "ailist.IntervalArray.has_hit": [[60, "ailist-intervalarray-has-hit"]], "ailist.IntervalArray.index_with_aiarray": [[61, "ailist-intervalarray-index-with-aiarray"]], "ailist.IntervalArray.intersect": [[62, "ailist-intervalarray-intersect"]], "ailist.IntervalArray.intersect_from_IntervalArray": [[63, "ailist-intervalarray-intersect-from-intervalarray"]], "ailist.IntervalArray.is_closed": [[64, "ailist-intervalarray-is-closed"]], "ailist.IntervalArray.is_constructed": [[65, "ailist-intervalarray-is-constructed"]], "ailist.IntervalArray.is_frozen": [[66, "ailist-intervalarray-is-frozen"]], "ailist.IntervalArray.iter_intersect": [[67, "ailist-intervalarray-iter-intersect"]], "ailist.IntervalArray.iter_sorted": [[68, "ailist-intervalarray-iter-sorted"]], "ailist.IntervalArray.length_dist": [[69, "ailist-intervalarray-length-dist"]], "ailist.IntervalArray.merge": [[70, "ailist-intervalarray-merge"]], "ailist.IntervalArray.nhits": [[71, "ailist-intervalarray-nhits"]], "ailist.IntervalArray.nhits_from_IntervalArray": [[72, "ailist-intervalarray-nhits-from-intervalarray"]], "ailist.IntervalArray.range": [[73, "ailist-intervalarray-range"]], "ailist.IntervalArray.simulate": [[74, "ailist-intervalarray-simulate"]], "ailist.IntervalArray.size": [[75, "ailist-intervalarray-size"]], "ailist.IntervalArray.sort": [[76, "ailist-intervalarray-sort"]], "ailist.IntervalArray.sorted_index": [[77, "ailist-intervalarray-sorted-index"]], "ailist.IntervalArray.starts": [[78, "ailist-intervalarray-starts"]], "ailist.IntervalArray.unfreeze": [[79, "ailist-intervalarray-unfreeze"]], "ailist.IntervalArray.validate_construction": [[80, "ailist-intervalarray-validate-construction"]], "ailist.IntervalArray.wps": [[81, "ailist-intervalarray-wps"]], "ailist.LabeledInterval": [[82, "ailist-labeledinterval"]], "ailist.LabeledInterval.end": [[83, "ailist-labeledinterval-end"]], "ailist.LabeledInterval.id_value": [[84, "ailist-labeledinterval-id-value"]], "ailist.LabeledInterval.label": [[85, "ailist-labeledinterval-label"]], "ailist.LabeledInterval.start": [[86, "ailist-labeledinterval-start"]], "ailist.LabeledInterval.to_array": [[87, "ailist-labeledinterval-to-array"]], "ailist.LabeledIntervalArray": [[88, "ailist-labeledintervalarray"]], "ailist.LabeledIntervalArray.add": [[89, "ailist-labeledintervalarray-add"]], "ailist.LabeledIntervalArray.append": [[90, "ailist-labeledintervalarray-append"]], "ailist.LabeledIntervalArray.bin_nhits": [[91, "ailist-labeledintervalarray-bin-nhits"]], "ailist.LabeledIntervalArray.close": [[92, "ailist-labeledintervalarray-close"]], "ailist.LabeledIntervalArray.common": [[93, "ailist-labeledintervalarray-common"]], "ailist.LabeledIntervalArray.construct": [[94, "ailist-labeledintervalarray-construct"]], "ailist.LabeledIntervalArray.copy": [[95, "ailist-labeledintervalarray-copy"]], "ailist.LabeledIntervalArray.coverage": [[96, "ailist-labeledintervalarray-coverage"]], "ailist.LabeledIntervalArray.create_bin": [[97, "ailist-labeledintervalarray-create-bin"]], "ailist.LabeledIntervalArray.downsample": [[98, "ailist-labeledintervalarray-downsample"]], "ailist.LabeledIntervalArray.ends": [[99, "ailist-labeledintervalarray-ends"]], "ailist.LabeledIntervalArray.filter": [[100, "ailist-labeledintervalarray-filter"]], "ailist.LabeledIntervalArray.filter_exact_match": [[101, "ailist-labeledintervalarray-filter-exact-match"]], "ailist.LabeledIntervalArray.freeze": [[102, "ailist-labeledintervalarray-freeze"]], "ailist.LabeledIntervalArray.get": [[103, "ailist-labeledintervalarray-get"]], "ailist.LabeledIntervalArray.get_ail": [[104, "ailist-labeledintervalarray-get-ail"]], "ailist.LabeledIntervalArray.get_locs": [[105, "ailist-labeledintervalarray-get-locs"]], "ailist.LabeledIntervalArray.has_exact_match": [[106, "ailist-labeledintervalarray-has-exact-match"]], "ailist.LabeledIntervalArray.has_hit": [[107, "ailist-labeledintervalarray-has-hit"]], "ailist.LabeledIntervalArray.index_with_aiarray": [[108, "ailist-labeledintervalarray-index-with-aiarray"]], "ailist.LabeledIntervalArray.intersect": [[109, "ailist-labeledintervalarray-intersect"]], "ailist.LabeledIntervalArray.intersect_from_LabeledIntervalArray": [[110, "ailist-labeledintervalarray-intersect-from-labeledintervalarray"]], "ailist.LabeledIntervalArray.is_closed": [[111, "ailist-labeledintervalarray-is-closed"]], "ailist.LabeledIntervalArray.is_constructed": [[112, "ailist-labeledintervalarray-is-constructed"]], "ailist.LabeledIntervalArray.is_exact_match": [[113, "ailist-labeledintervalarray-is-exact-match"]], "ailist.LabeledIntervalArray.is_frozen": [[114, "ailist-labeledintervalarray-is-frozen"]], "ailist.LabeledIntervalArray.iter_intersect": [[115, "ailist-labeledintervalarray-iter-intersect"]], "ailist.LabeledIntervalArray.iter_sorted": [[116, "ailist-labeledintervalarray-iter-sorted"]], "ailist.LabeledIntervalArray.label_counts": [[117, "ailist-labeledintervalarray-label-counts"]], "ailist.LabeledIntervalArray.label_ranges": [[118, "ailist-labeledintervalarray-label-ranges"]], "ailist.LabeledIntervalArray.labels": [[119, "ailist-labeledintervalarray-labels"]], "ailist.LabeledIntervalArray.length_dist": [[120, "ailist-labeledintervalarray-length-dist"]], "ailist.LabeledIntervalArray.merge": [[121, "ailist-labeledintervalarray-merge"]], "ailist.LabeledIntervalArray.midpoint_coverage": [[122, "ailist-labeledintervalarray-midpoint-coverage"]], "ailist.LabeledIntervalArray.nhits": [[123, "ailist-labeledintervalarray-nhits"]], "ailist.LabeledIntervalArray.nhits_from_LabeledIntervalArray": [[124, "ailist-labeledintervalarray-nhits-from-labeledintervalarray"]], "ailist.LabeledIntervalArray.percent_coverage": [[125, "ailist-labeledintervalarray-percent-coverage"]], "ailist.LabeledIntervalArray.set_ail": [[126, "ailist-labeledintervalarray-set-ail"]], "ailist.LabeledIntervalArray.simulate": [[127, "ailist-labeledintervalarray-simulate"]], "ailist.LabeledIntervalArray.size": [[128, "ailist-labeledintervalarray-size"]], "ailist.LabeledIntervalArray.sort": [[129, "ailist-labeledintervalarray-sort"]], "ailist.LabeledIntervalArray.sorted_index": [[130, "ailist-labeledintervalarray-sorted-index"]], "ailist.LabeledIntervalArray.starts": [[131, "ailist-labeledintervalarray-starts"]], "ailist.LabeledIntervalArray.subtract": [[132, "ailist-labeledintervalarray-subtract"]], "ailist.LabeledIntervalArray.unfreeze": [[133, "ailist-labeledintervalarray-unfreeze"]], "ailist.LabeledIntervalArray.union": [[134, "ailist-labeledintervalarray-union"]], "ailist.LabeledIntervalArray.unique_labels": [[135, "ailist-labeledintervalarray-unique-labels"]], "ailist.LabeledIntervalArray.validate_construction": [[136, "ailist-labeledintervalarray-validate-construction"]], "ailist.LabeledIntervalArray.where_interval": [[137, "ailist-labeledintervalarray-where-interval"]], "ailist.LabeledIntervalArray.which_exact_match": [[138, "ailist-labeledintervalarray-which-exact-match"]], "ailist.LabeledIntervalArray.wps": [[139, "ailist-labeledintervalarray-wps"]], "The ailist API reference": [[140, "module-ailist"]], "API": [[140, "api"]], "Basic class": [[140, "basic-class"]], "Benchmarking": [[141, "benchmarking"]], "ailist\u2019s documentation": [[142, "ailist-s-documentation"]], "Release Notes": [[142, "release-notes"], [144, "release-notes"]], "Indices and tables": [[142, "indices-and-tables"]], "Installation": [[143, "installation"]], "Anaconda": [[143, "anaconda"]], "PyPI only": [[143, "pypi-only"]], "Version 0.1.8": [[144, "version-0-1-8"]], "Version 0.1.7": [[144, "version-0-1-7"]], "Tutorial": [[145, "tutorial"]]}, "indexentries": {"ailist (class in ailist)": [[1, "ailist.AIList"]], "add() (ailist.ailist method)": [[2, "ailist.AIList.add"]], "append() (ailist.ailist method)": [[3, "ailist.AIList.append"]], "bin_coverage() (ailist.ailist method)": [[4, "ailist.AIList.bin_coverage"]], "bin_nhits() (ailist.ailist method)": [[5, "ailist.AIList.bin_nhits"]], "close() (ailist.ailist method)": [[6, "ailist.AIList.close"]], "common() (ailist.ailist method)": [[7, "ailist.AIList.common"]], "construct() (ailist.ailist method)": [[8, "ailist.AIList.construct"]], "copy() (ailist.ailist method)": [[9, "ailist.AIList.copy"]], "coverage() (ailist.ailist method)": [[10, "ailist.AIList.coverage"]], "display() (ailist.ailist method)": [[11, "ailist.AIList.display"]], "downsample() (ailist.ailist method)": [[12, "ailist.AIList.downsample"]], "extract_ends() (ailist.ailist method)": [[13, "ailist.AIList.extract_ends"]], "extract_id() (ailist.ailist method)": [[14, "ailist.AIList.extract_id"]], "extract_starts() (ailist.ailist method)": [[15, "ailist.AIList.extract_starts"]], "filter() (ailist.ailist method)": [[16, "ailist.AIList.filter"]], "first (ailist.ailist attribute)": [[17, "ailist.AIList.first"]], "freeze() (ailist.ailist method)": [[18, "ailist.AIList.freeze"]], "from_array() (ailist.ailist method)": [[19, "ailist.AIList.from_array"]], "idxc (ailist.ailist attribute)": [[20, "ailist.AIList.idxC"]], "intersect() (ailist.ailist method)": [[21, "ailist.AIList.intersect"]], "intersect_from_ailist() (ailist.ailist method)": [[22, "ailist.AIList.intersect_from_ailist"]], "intersect_from_array() (ailist.ailist method)": [[23, "ailist.AIList.intersect_from_array"]], "intersect_ids() (ailist.ailist method)": [[24, "ailist.AIList.intersect_ids"]], "interval_coverage() (ailist.ailist method)": [[25, "ailist.AIList.interval_coverage"]], "is_closed (ailist.ailist attribute)": [[26, "ailist.AIList.is_closed"]], "is_constructed (ailist.ailist attribute)": [[27, "ailist.AIList.is_constructed"]], "is_frozen (ailist.ailist attribute)": [[28, "ailist.AIList.is_frozen"]], "iter_sorted() (ailist.ailist method)": [[29, "ailist.AIList.iter_sorted"]], "last (ailist.ailist attribute)": [[30, "ailist.AIList.last"]], "lenc (ailist.ailist attribute)": [[31, "ailist.AIList.lenC"]], "length_dist() (ailist.ailist method)": [[32, "ailist.AIList.length_dist"]], "merge() (ailist.ailist method)": [[33, "ailist.AIList.merge"]], "nc (ailist.ailist attribute)": [[34, "ailist.AIList.nc"]], "nhits() (ailist.ailist method)": [[35, "ailist.AIList.nhits"]], "nhits_from_array() (ailist.ailist method)": [[36, "ailist.AIList.nhits_from_array"]], "range (ailist.ailist attribute)": [[37, "ailist.AIList.range"]], "size (ailist.ailist attribute)": [[38, "ailist.AIList.size"]], "subtract() (ailist.ailist method)": [[39, "ailist.AIList.subtract"]], "unfreeze() (ailist.ailist method)": [[40, "ailist.AIList.unfreeze"]], "wps() (ailist.ailist method)": [[41, "ailist.AIList.wps"]], "interval (class in ailist)": [[42, "ailist.Interval"]], "end (ailist.interval attribute)": [[43, "ailist.Interval.end"]], "start (ailist.interval attribute)": [[44, "ailist.Interval.start"]], "intervalarray (class in ailist)": [[45, "ailist.IntervalArray"]], "add() (ailist.intervalarray method)": [[46, "ailist.IntervalArray.add"]], "append() (ailist.intervalarray method)": [[47, "ailist.IntervalArray.append"]], "bin_nhits() (ailist.intervalarray method)": [[48, "ailist.IntervalArray.bin_nhits"]], "close() (ailist.intervalarray method)": [[49, "ailist.IntervalArray.close"]], "construct() (ailist.intervalarray method)": [[50, "ailist.IntervalArray.construct"]], "copy() (ailist.intervalarray method)": [[51, "ailist.IntervalArray.copy"]], "coverage() (ailist.intervalarray method)": [[52, "ailist.IntervalArray.coverage"]], "create_bin() (ailist.intervalarray static method)": [[53, "ailist.IntervalArray.create_bin"]], "downsample() (ailist.intervalarray method)": [[54, "ailist.IntervalArray.downsample"]], "ends (ailist.intervalarray property)": [[55, "ailist.IntervalArray.ends"]], "filter() (ailist.intervalarray method)": [[56, "ailist.IntervalArray.filter"]], "filter_exact_match() (ailist.intervalarray method)": [[57, "ailist.IntervalArray.filter_exact_match"]], "freeze() (ailist.intervalarray method)": [[58, "ailist.IntervalArray.freeze"]], "has_exact_match() (ailist.intervalarray method)": [[59, "ailist.IntervalArray.has_exact_match"]], "has_hit() (ailist.intervalarray method)": [[60, "ailist.IntervalArray.has_hit"]], "index_with_aiarray() (ailist.intervalarray method)": [[61, "ailist.IntervalArray.index_with_aiarray"]], "intersect() (ailist.intervalarray method)": [[62, "ailist.IntervalArray.intersect"]], "intersect_from_intervalarray() (ailist.intervalarray method)": [[63, "ailist.IntervalArray.intersect_from_IntervalArray"]], "is_closed (ailist.intervalarray property)": [[64, "ailist.IntervalArray.is_closed"]], "is_constructed (ailist.intervalarray property)": [[65, "ailist.IntervalArray.is_constructed"]], "is_frozen (ailist.intervalarray property)": [[66, "ailist.IntervalArray.is_frozen"]], "iter_intersect() (ailist.intervalarray method)": [[67, "ailist.IntervalArray.iter_intersect"]], "iter_sorted() (ailist.intervalarray method)": [[68, "ailist.IntervalArray.iter_sorted"]], "length_dist() (ailist.intervalarray method)": [[69, "ailist.IntervalArray.length_dist"]], "merge() (ailist.intervalarray method)": [[70, "ailist.IntervalArray.merge"]], "nhits() (ailist.intervalarray method)": [[71, "ailist.IntervalArray.nhits"]], "nhits_from_intervalarray() (ailist.intervalarray method)": [[72, "ailist.IntervalArray.nhits_from_IntervalArray"]], "range (ailist.intervalarray property)": [[73, "ailist.IntervalArray.range"]], "simulate() (ailist.intervalarray method)": [[74, "ailist.IntervalArray.simulate"]], "size (ailist.intervalarray property)": [[75, "ailist.IntervalArray.size"]], "sort() (ailist.intervalarray method)": [[76, "ailist.IntervalArray.sort"]], "sorted_index() (ailist.intervalarray method)": [[77, "ailist.IntervalArray.sorted_index"]], "starts (ailist.intervalarray property)": [[78, "ailist.IntervalArray.starts"]], "unfreeze() (ailist.intervalarray method)": [[79, "ailist.IntervalArray.unfreeze"]], "validate_construction() (ailist.intervalarray method)": [[80, "ailist.IntervalArray.validate_construction"]], "wps() (ailist.intervalarray method)": [[81, "ailist.IntervalArray.wps"]], "labeledinterval (class in ailist)": [[82, "ailist.LabeledInterval"]], "end (ailist.labeledinterval attribute)": [[83, "ailist.LabeledInterval.end"]], "id_value (ailist.labeledinterval attribute)": [[84, "ailist.LabeledInterval.id_value"]], "label (ailist.labeledinterval attribute)": [[85, "ailist.LabeledInterval.label"]], "start (ailist.labeledinterval attribute)": [[86, "ailist.LabeledInterval.start"]], "to_array() (ailist.labeledinterval method)": [[87, "ailist.LabeledInterval.to_array"]], "labeledintervalarray (class in ailist)": [[88, "ailist.LabeledIntervalArray"]], "add() (ailist.labeledintervalarray method)": [[89, "ailist.LabeledIntervalArray.add"]], "append() (ailist.labeledintervalarray method)": [[90, "ailist.LabeledIntervalArray.append"]], "bin_nhits() (ailist.labeledintervalarray method)": [[91, "ailist.LabeledIntervalArray.bin_nhits"]], "close() (ailist.labeledintervalarray method)": [[92, "ailist.LabeledIntervalArray.close"]], "common() (ailist.labeledintervalarray method)": [[93, "ailist.LabeledIntervalArray.common"]], "construct() (ailist.labeledintervalarray method)": [[94, "ailist.LabeledIntervalArray.construct"]], "copy() (ailist.labeledintervalarray method)": [[95, "ailist.LabeledIntervalArray.copy"]], "coverage() (ailist.labeledintervalarray method)": [[96, "ailist.LabeledIntervalArray.coverage"]], "create_bin() (ailist.labeledintervalarray static method)": [[97, "ailist.LabeledIntervalArray.create_bin"]], "downsample() (ailist.labeledintervalarray method)": [[98, "ailist.LabeledIntervalArray.downsample"]], "ends (ailist.labeledintervalarray attribute)": [[99, "ailist.LabeledIntervalArray.ends"]], "filter() (ailist.labeledintervalarray method)": [[100, "ailist.LabeledIntervalArray.filter"]], "filter_exact_match() (ailist.labeledintervalarray method)": [[101, "ailist.LabeledIntervalArray.filter_exact_match"]], "freeze() (ailist.labeledintervalarray method)": [[102, "ailist.LabeledIntervalArray.freeze"]], "get() (ailist.labeledintervalarray method)": [[103, "ailist.LabeledIntervalArray.get"]], "get_ail() (ailist.labeledintervalarray method)": [[104, "ailist.LabeledIntervalArray.get_ail"]], "get_locs() (ailist.labeledintervalarray method)": [[105, "ailist.LabeledIntervalArray.get_locs"]], "has_exact_match() (ailist.labeledintervalarray method)": [[106, "ailist.LabeledIntervalArray.has_exact_match"]], "has_hit() (ailist.labeledintervalarray method)": [[107, "ailist.LabeledIntervalArray.has_hit"]], "index_with_aiarray() (ailist.labeledintervalarray method)": [[108, "ailist.LabeledIntervalArray.index_with_aiarray"]], "intersect() (ailist.labeledintervalarray method)": [[109, "ailist.LabeledIntervalArray.intersect"]], "intersect_from_labeledintervalarray() (ailist.labeledintervalarray method)": [[110, "ailist.LabeledIntervalArray.intersect_from_LabeledIntervalArray"]], "is_closed (ailist.labeledintervalarray attribute)": [[111, "ailist.LabeledIntervalArray.is_closed"]], "is_constructed (ailist.labeledintervalarray attribute)": [[112, "ailist.LabeledIntervalArray.is_constructed"]], "is_exact_match() (ailist.labeledintervalarray method)": [[113, "ailist.LabeledIntervalArray.is_exact_match"]], "is_frozen (ailist.labeledintervalarray attribute)": [[114, "ailist.LabeledIntervalArray.is_frozen"]], "iter_intersect() (ailist.labeledintervalarray method)": [[115, "ailist.LabeledIntervalArray.iter_intersect"]], "iter_sorted() (ailist.labeledintervalarray method)": [[116, "ailist.LabeledIntervalArray.iter_sorted"]], "label_counts (ailist.labeledintervalarray attribute)": [[117, "ailist.LabeledIntervalArray.label_counts"]], "label_ranges (ailist.labeledintervalarray attribute)": [[118, "ailist.LabeledIntervalArray.label_ranges"]], "labels (ailist.labeledintervalarray attribute)": [[119, "ailist.LabeledIntervalArray.labels"]], "length_dist() (ailist.labeledintervalarray method)": [[120, "ailist.LabeledIntervalArray.length_dist"]], "merge() (ailist.labeledintervalarray method)": [[121, "ailist.LabeledIntervalArray.merge"]], "midpoint_coverage() (ailist.labeledintervalarray method)": [[122, "ailist.LabeledIntervalArray.midpoint_coverage"]], "nhits() (ailist.labeledintervalarray method)": [[123, "ailist.LabeledIntervalArray.nhits"]], "nhits_from_labeledintervalarray() (ailist.labeledintervalarray method)": [[124, "ailist.LabeledIntervalArray.nhits_from_LabeledIntervalArray"]], "percent_coverage() (ailist.labeledintervalarray method)": [[125, "ailist.LabeledIntervalArray.percent_coverage"]], "set_ail() (ailist.labeledintervalarray method)": [[126, "ailist.LabeledIntervalArray.set_ail"]], "simulate() (ailist.labeledintervalarray method)": [[127, "ailist.LabeledIntervalArray.simulate"]], "size (ailist.labeledintervalarray attribute)": [[128, "ailist.LabeledIntervalArray.size"]], "sort() (ailist.labeledintervalarray method)": [[129, "ailist.LabeledIntervalArray.sort"]], "sorted_index() (ailist.labeledintervalarray method)": [[130, "ailist.LabeledIntervalArray.sorted_index"]], "starts (ailist.labeledintervalarray attribute)": [[131, "ailist.LabeledIntervalArray.starts"]], "subtract() (ailist.labeledintervalarray method)": [[132, "ailist.LabeledIntervalArray.subtract"]], "unfreeze() (ailist.labeledintervalarray method)": [[133, "ailist.LabeledIntervalArray.unfreeze"]], "union() (ailist.labeledintervalarray method)": [[134, "ailist.LabeledIntervalArray.union"]], "unique_labels (ailist.labeledintervalarray attribute)": [[135, "ailist.LabeledIntervalArray.unique_labels"]], "validate_construction() (ailist.labeledintervalarray method)": [[136, "ailist.LabeledIntervalArray.validate_construction"]], "where_interval() (ailist.labeledintervalarray method)": [[137, "ailist.LabeledIntervalArray.where_interval"]], "which_exact_match() (ailist.labeledintervalarray method)": [[138, "ailist.LabeledIntervalArray.which_exact_match"]], "wps() (ailist.labeledintervalarray method)": [[139, "ailist.LabeledIntervalArray.wps"]], "ailist": [[140, "module-ailist"]], "module": [[140, "module-ailist"]]}})